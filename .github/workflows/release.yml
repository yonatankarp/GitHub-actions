name: Release
on:
  workflow_call:
    inputs:
      module-name:
        type: string
        required: false
        description: |
          the name of the module to build and release, if none provided, the
          project would be assumed as none-modular Gradle project
        default: ""
      tag:
        type: string
        required: true
        description: the tag of this release (e.g. for SemVer `1.2.3`)
    secrets:
      GITHUB_PATH:
        required: true
        description: PAT with access to publish packages to GitHub Packages

jobs:
  artifact:
    name: Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Artifact Version
        env:
          release_tag: ${{ inputs.tag }}
        run: |
          echo Artifact version: ${release_tag}
          echo "version=${release_tag}" > gradle.properties

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          #Instead of manually configure caching of gradle, use an action which is provided. Details here: https://github.com/actions/setup-java
          cache: gradle

      - name: Gradle Build
        id: build
        env:
          module_name: ${{ inputs.module-name }}
        run: |
          if [ ! -n "$MODULE_NAME" ]; then
            ./gradlew build
          else
            ./gradlew :${{ inputs.module-name }}:build
          fi

      - name: Publish Artifact
        id: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PATH }}
        run: ./gradlew publishMavenPublicationToGitHubPackagesRepository
